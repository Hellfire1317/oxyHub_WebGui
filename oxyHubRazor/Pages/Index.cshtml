@page
@model oxyHubRazor.Pages.Home.IndexModel
@{
    ViewData["Title"] = "oxyGenis Controller Dashboard";
    var mqtt = Model.SystemState.MqttdRunning ? "online" : "offline";
    var hostapd = Model.SystemState.HostapdRunning ? "online" : "offline";
    var sensor1 = Model.SystemState.Sensor1Online ? "online" : "offline";
    var sensor2 = Model.SystemState.Sensor2Online ? "online" : "offline";
    var sensor3 = Model.SystemState.Sensor3Online ? "online" : "offline";
    var sensor4 = Model.SystemState.Sensor4Online ? "online" : "offline";
}

<html lang="de-at">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="refresh" content="5">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <link href="~/css/Home.css" rel="stylesheet" />
    <title>oxyGenise Controller Dashboard</title>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-sm-2">
                <p class="centered">
                    Status<br />
                    MQTT: @mqtt<br />
                    Hostapd: @hostapd<br />
                    Sensor 1: @sensor1<br />
                    Sensor 2: @sensor2<br />
                    Sensor 3: @sensor3<br />
                    Sensor 4: @sensor4<br />
                </p>
            </div>
            <div class="col-sm-8">
                <h1 class="centered vertical-center">oxyGenise Controller Dashboard</h1>
            </div>
            <div class="col-sm-2">
                <form method="post"  asp-page-handler="RestartHostapd"><button class="btn btn-default">Restart Hostapd</button></form>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-sm-4">
                Feuchtigkeit: @Html.DisplayFor(model => model.mqttData[0].feuchtigkeit) <br />
                Temperatur: @Html.DisplayFor(model => model.mqttData[0].temperatur)
            </div>
            <div class="col-sm-4">
                Volatile Masse: @Html.DisplayFor(model => model.mqttData[0].tvoc) ppb<br />
            </div>
            <div class="col-sm-4">
                CO² Anteil: @Html.DisplayFor(model => model.mqttData[0].eco2) ppm<br />
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-sm-4">
                Luftqualität: @Html.DisplayFor(model => model.mqttData[0].airQuality) %<br />
                Genauigkeit: @Html.DisplayFor(model => model.mqttData[0].airQualityPrecision) %<br />
            </div>
            <div class="col-sm-4">
                Roher Wasserstoff Anteil: @Html.DisplayFor(model => model.mqttData[0].rawh2)<br />
            </div>
            <div class="col-sm-4">
                Roher Ethanol Anteil: @Html.DisplayFor(model => model.mqttData[0].rawEthanol)<br />
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous"></script>
    <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react/16.13.0/umd/react.development.js"></script>
    <script crossorigin src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.13.0/umd/react-dom.development.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/remarkable/1.7.1/remarkable.min.js"></script>
    <script src="@Url.Content("~/js/oxySensorData.jsx")"></script>
</body>
</html>




